from django.db import models


class MetaInfo(models.Model):
    disclaimer = models.TextField(null=True, blank=True)
    last_updated = models.DateField(null=True, blank=True)
    license = models.TextField(null=True, blank=True)
    results_limit = models.IntegerField(null=True, blank=True)
    results_skip = models.IntegerField(null=True, blank=True)
    results_total = models.IntegerField(null=True, blank=True)
    terms = models.TextField(null=True, blank=True)


class OpenFDA(models.Model):
    application_number = models.CharField(max_length=255, null=True, blank=True)
    brand_name = models.CharField(max_length=255, null=True, blank=True)
    generic_name = models.CharField(max_length=255, null=True, blank=True)
    is_original_packager = models.BooleanField(null=True, blank=True)
    manufacturer_name = models.CharField(max_length=255, null=True, blank=True)
    nui = models.CharField(max_length=255, null=True, blank=True)
    original_packager_product_ndc = models.CharField(max_length=255, null=True, blank=True)
    package_ndc = models.CharField(max_length=255, null=True, blank=True)
    pharm_class_cs = models.CharField(max_length=255, null=True, blank=True)
    pharm_class_epc = models.CharField(max_length=255, null=True, blank=True)
    pharm_class_moa = models.CharField(max_length=255, null=True, blank=True)
    pharm_class_pe = models.CharField(max_length=255, null=True, blank=True)
    product_ndc = models.CharField(max_length=255, null=True, blank=True)
    product_type = models.CharField(max_length=255, null=True, blank=True)
    route = models.CharField(max_length=255, null=True, blank=True)
    rxcui = models.CharField(max_length=255, null=True, blank=True)
    spl_id = models.CharField(max_length=255, null=True, blank=True)
    spl_set_id = models.CharField(max_length=255, null=True, blank=True)
    substance_name = models.CharField(max_length=255, null=True, blank=True)
    unii = models.CharField(max_length=255, null=True, blank=True)
    upc = models.CharField(max_length=255, null=True, blank=True)


from tinymce.models import HTMLField


class Results(models.Model):
    abuse = HTMLField(null=True, blank=True)
    abuse_table = HTMLField(null=True, blank=True)
    accessories = HTMLField(null=True, blank=True)
    active_ingredient = HTMLField(null=True, blank=True)
    active_ingredient_table = HTMLField(null=True, blank=True)
    adverse_reactions = HTMLField(null=True, blank=True)
    adverse_reactions_table = HTMLField(null=True, blank=True)
    alarms = HTMLField(null=True, blank=True)
    animal_pharmacology_and_or_toxicology = HTMLField(null=True, blank=True)
    animal_pharmacology_and_or_toxicology_table = HTMLField(null=True, blank=True)
    ask_doctor = HTMLField(null=True, blank=True)
    ask_doctor_or_pharmacist = HTMLField(null=True, blank=True)
    ask_doctor_or_pharmacist_table = HTMLField(null=True, blank=True)
    ask_doctor_table = HTMLField(null=True, blank=True)
    boxed_warning = HTMLField(null=True, blank=True)
    boxed_warning_table = HTMLField(null=True, blank=True)
    carcinogenesis_and_mutagenesis_and_impairment_of_fertility = HTMLField(null=True, blank=True)
    carcinogenesis_and_mutagenesis_and_impairment_of_fertility_table = HTMLField(null=True, blank=True)
    cleaning = HTMLField(null=True, blank=True)
    clinical_pharmacology = HTMLField(null=True, blank=True)
    clinical_pharmacology_table = HTMLField(null=True, blank=True)
    clinical_studies = HTMLField(null=True, blank=True)
    clinical_studies_table = HTMLField(null=True, blank=True)
    components = HTMLField(null=True, blank=True)
    contraindications = HTMLField(null=True, blank=True)
    contraindications_table = HTMLField(null=True, blank=True)
    controlled_substance = HTMLField(null=True, blank=True)
    dependence = HTMLField(null=True, blank=True)
    description = HTMLField(null=True, blank=True)
    description_table = HTMLField(null=True, blank=True)
    disposal_and_waste_handling = HTMLField(null=True, blank=True)
    do_not_use = HTMLField(null=True, blank=True)
    do_not_use_table = HTMLField(null=True, blank=True)
    dosage_and_administration = HTMLField(null=True, blank=True)
    dosage_and_administration_table = HTMLField(null=True, blank=True)
    dosage_forms_and_strengths = HTMLField(null=True, blank=True)
    dosage_forms_and_strengths_table = HTMLField(null=True, blank=True)
    drug_abuse_and_dependence = HTMLField(null=True, blank=True)
    drug_abuse_and_dependence_table = HTMLField(null=True, blank=True)
    drug_and_or_laboratory_test_interactions = HTMLField(null=True, blank=True)
    drug_and_or_laboratory_test_interactions_table = HTMLField(null=True, blank=True)
    drug_interactions = HTMLField(null=True, blank=True)
    drug_interactions_table = HTMLField(null=True, blank=True)
    effective_time = models.DateTimeField(null=True, blank=True)
    environmental_warning = HTMLField(null=True, blank=True)
    general_precautions = HTMLField(null=True, blank=True)
    general_precautions_table = HTMLField(null=True, blank=True)
    geriatric_use = HTMLField(null=True, blank=True)
    geriatric_use_table = HTMLField(null=True, blank=True)
    health_care_provider_letter = HTMLField(null=True, blank=True)
    health_care_provider_letter_table = HTMLField(null=True, blank=True)
    health_claim = HTMLField(null=True, blank=True)
    how_supplied = HTMLField(null=True, blank=True)
    how_supplied_table = HTMLField(null=True, blank=True)
    inactive_ingredient = HTMLField(null=True, blank=True)
    inactive_ingredient_table = HTMLField(null=True, blank=True)
    indications_and_usage = HTMLField(null=True, blank=True)
    indications_and_usage_table = HTMLField(null=True, blank=True)
    information_for_owners_or_caregivers = HTMLField(null=True, blank=True)
    information_for_owners_or_caregivers_table = HTMLField(null=True, blank=True)
    information_for_patients = HTMLField(null=True, blank=True)
    information_for_patients_table = HTMLField(null=True, blank=True)
    instructions_for_use = HTMLField(null=True, blank=True)
    instructions_for_use_table = HTMLField(null=True, blank=True)
    intended_use_of_the_device = HTMLField(null=True, blank=True)
    keep_out_of_reach_of_children = HTMLField(null=True, blank=True)
    keep_out_of_reach_of_children_table = HTMLField(null=True, blank=True)
    labor_and_delivery = HTMLField(null=True, blank=True)
    laboratory_tests = HTMLField(null=True, blank=True)
    laboratory_tests_table = HTMLField(null=True, blank=True)
    mechanism_of_action = HTMLField(null=True, blank=True)
    mechanism_of_action_table = HTMLField(null=True, blank=True)
    microbiology = HTMLField(null=True, blank=True)
    microbiology_table = HTMLField(null=True, blank=True)
    nonclinical_toxicology = HTMLField(null=True, blank=True)
    nonclinical_toxicology_table = HTMLField(null=True, blank=True)
    nonteratogenic_effects = HTMLField(null=True, blank=True)
    nursing_mothers = HTMLField(null=True, blank=True)
    openfda = models.ForeignKey(OpenFDA, on_delete=models.CASCADE, null=True, blank=True)
    other_safety_information = HTMLField(null=True, blank=True)
    overdosage = HTMLField(null=True, blank=True)
    overdosage_table = HTMLField(null=True, blank=True)
    package_label_principal_display_panel = HTMLField(null=True, blank=True)
    package_label_principal_display_panel_table = HTMLField(null=True, blank=True)
    patient_medication_information = HTMLField(null=True, blank=True)
    patient_medication_information_table = HTMLField(null=True, blank=True)
    pediatric_use = HTMLField(null=True, blank=True)
    pediatric_use_table = HTMLField(null=True, blank=True)
    pharmacodynamics = HTMLField(null=True, blank=True)
    pharmacodynamics_table = HTMLField(null=True, blank=True)
    pharmacogenomics = HTMLField(null=True, blank=True)
    pharmacokinetics = HTMLField(null=True, blank=True)
    pharmacokinetics_table = HTMLField(null=True, blank=True)
    precautions = HTMLField(null=True, blank=True)
    precautions_table = HTMLField(null=True, blank=True)
    pregnancy = HTMLField(null=True, blank=True)
    pregnancy_or_breast_feeding = HTMLField(null=True, blank=True)
    pregnancy_or_breast_feeding_table = HTMLField(null=True, blank=True)
    pregnancy_table = HTMLField(null=True, blank=True)
    purpose = HTMLField(null=True, blank=True)
    purpose_table = HTMLField(null=True, blank=True)
    questions = HTMLField(null=True, blank=True)
    questions_table = HTMLField(null=True, blank=True)
    recent_major_changes = HTMLField(null=True, blank=True)
    recent_major_changes_table = HTMLField(null=True, blank=True)
    references = HTMLField(null=True, blank=True)
    references_table = HTMLField(null=True, blank=True)
    risks = HTMLField(null=True, blank=True)
    risks_table = HTMLField(null=True, blank=True)
    route = HTMLField(null=True, blank=True)
    safe_handling_warning = HTMLField(null=True, blank=True)
    set_id = models.CharField(max_length=255, null=True, blank=True)
    spl_indexing_data_elements = HTMLField(null=True, blank=True)
    spl_medguide = HTMLField(null=True, blank=True)
    spl_medguide_table = HTMLField(null=True, blank=True)
    spl_patient_package_insert = HTMLField(null=True, blank=True)
    spl_patient_package_insert_table = HTMLField(null=True, blank=True)
    spl_product_data_elements = HTMLField(null=True, blank=True)
    spl_unclassified_section = HTMLField(null=True, blank=True)
    spl_unclassified_section_table = HTMLField(null=True, blank=True)
    statement_of_identity = HTMLField(null=True, blank=True)
    stop_use = HTMLField(null=True, blank=True)
    stop_use_table = HTMLField(null=True, blank=True)
    storage_and_handling = HTMLField(null=True, blank=True)
    storage_and_handling_table = HTMLField(null=True, blank=True)
    summary_of_safety_and_effectiveness = HTMLField(null=True, blank=True)
    teratogenic_effects = HTMLField(null=True, blank=True)
    troubleshooting = HTMLField(null=True, blank=True)
    use_in_specific_populations = HTMLField(null=True, blank=True)
    use_in_specific_populations_table = HTMLField(null=True, blank=True)
    user_safety_warnings = HTMLField(null=True, blank=True)
    version = models.CharField(max_length=255, null=True, blank=True)
    veterinary_indications = HTMLField(null=True, blank=True)
    warnings = HTMLField(null=True, blank=True)
    warnings_and_cautions = HTMLField(null=True, blank=True)
    warnings_and_cautions_table = HTMLField(null=True, blank=True)
    warnings_table = HTMLField(null=True, blank=True)
    when_using = HTMLField(null=True, blank=True)
    when_using_table = HTMLField(null=True, blank=True)


class Root(models.Model):
    meta = models.ForeignKey(MetaInfo, on_delete=models.CASCADE, null=True, blank=True)
    results = models.ForeignKey(Results, on_delete=models.CASCADE, null=True, blank=True)
